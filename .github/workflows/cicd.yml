name: "CI/CD"

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]


jobs:
  test:
    services:
      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_DATABASE: fridgy
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    runs-on: ubuntu-latest
    steps:
      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: actions/checkout@v3
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"
      - name: Install node dependencies
        run: npm install
      - name: Install composer dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Migrate database
        run: php artisan migrate
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: php artisan test
      - name: Execute tests (frontend) via Jest
        run: npm run test
  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: actions/checkout@v3
      - name: Install node dependencies
        run: npm install
      - name: Build assets
        run: npm run build
  deploy-dev:
    runs-on: ubuntu-latest
    needs: [ test,build ]
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: 'placeholder'
      - run: echo $(ssh-keyscan -p 222 ${{ secrets.SERVER_HOST }} )
      - name: Adding Known Hosts
        run: ssh-keyscan -p 222 ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: actions/checkout@v3
      - name: Install composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install node dependencies
        run: npm install --force
      - name: Build assets
        run: npm run build
      - name: Remove unnesesary files
        run: |
          rm -rf node_modules
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.development', '.env');"
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Deploy to server
        run: rsync -e 'ssh -p 222' -avz  ./ ${{secrets.SSH_USERNAME}}@${{ secrets.SERVER_HOST }}:${{ secrets.SSH_DIR_DEV }}
      - name: Migrate database
        run: ssh -p 222 ${{secrets.SSH_USERNAME}}@${{ secrets.SERVER_HOST }} "cd ${{ secrets.SSH_DIR_DEV }} && php80 artisan migrate"
  deploy-prod:
    runs-on: ubuntu-latest
    needs: [ test,build ]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: 'placeholder'
      - run: echo $(ssh-keyscan -p 222 ${{ secrets.SERVER_HOST }} )
      - name: Adding Known Hosts
        run: ssh-keyscan -p 222 ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: actions/checkout@v3
      - name: Install composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install node dependencies
        run: npm install --force
      - name: Build assets
        run: npm run build
      - name: Remove unnesesary files
        run: |
          rm -rf node_modules
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.production', '.env');"
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Deploy to server
        run: rsync -e 'ssh -p 222' -avz  ./ ${{secrets.SSH_USERNAME}}@${{ secrets.SERVER_HOST }}:${{ secrets.SSH_DIR_PROD }}
      - name: Migrate database
        run: ssh -p 222 ${{secrets.SSH_USERNAME}}@${{ secrets.SERVER_HOST }} "cd ${{ secrets.SSH_DIR_PROD }} && php80 artisan migrate"
